global:
  resolve_timeout: 5m
  smtp_from: alertmanager@mosgortrans.ru
  smtp_smarthost: mail.mosgortrans.com:25

#  smtp_auth_username: alertmanager@mosgortrans.ru
#  smtp_auth_password: smar+Seed43
#  smtp_from: 'adm_starodubcev@mosgortrans.ru'
#  smtp_auth_username: 'adm_starodubcev@mosgortrans.ru'
#  smtp_auth_password: 'kmi1Lz@020'


route:
  group_by: ['alertname', 'instance', 'severity']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'

  routes:
  - match:
      severity: service
    receiver: send_email

  - match:
      severity: critical
    receiver: opsgenie

receivers:
- name: send_email
  email_configs:
  - to: starodubcev_dm.sit@mosgortrans.ru
    require_tls: false
    send_resolved: true


- name: opsgenie
  opsgenie_configs:
    - send_resolved: true
      http_config: {}
      api_key: 3ca06e39-9623-4684-820d-bd71749e9c6a
#      api_url: https://api.opsgenie.com/
      message: '{{ template "opsgenie.default.message" . }}'
      description: '{{ template "opsgenie.default.description" . }}'
      source: '{{ template "opsgenie.default.source" . }}'
      responders:
      - name: test_team
        type: team
#      priority: '{{ if .CommonAnnotations.priority }}{{ .CommonAnnotations.priority}}{{ else }}P1{{ end }}'
      priority: P1

- name: 'web.hook'
  webhook_configs:
  - url: 'http://127.0.0.1:5001/'


- name: telegram-bot
  webhook_configs:
  - send_resolved: true
    url: 'http://0.0.0.0:8080'


inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']

